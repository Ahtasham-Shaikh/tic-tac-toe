{"version":3,"sources":["reportWebVitals.js","Square.js","Board.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Square","props","onClick","className","value","checkWinner","squares","lines","i","length","a","b","c","Board","createSquare","state","handler","Array","fill","isXNext","index","this","slice","setState","status","winner","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kDCICQ,EARA,SAACC,GAAD,OACb,wBACEC,QAASD,EAAMC,QACfC,UAAU,SAFZ,SAGGF,EAAMG,S,MC2DX,SAASC,EAAYC,GAanB,IAXA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGDC,EAAE,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAClC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACE,GAAGN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACnE,OAAON,EAAQI,GAGrB,OAAO,KAGMG,M,kDAjFb,aAAc,IAAD,8BACX,gBAmBFC,aAAe,SAACN,GAAD,OACb,cAAC,EAAD,CACEJ,MAAO,EAAKW,MAAMT,QAAQE,GAC1BN,QAAS,kBAAM,EAAKc,QAAQR,OArB9B,EAAKO,MAAQ,CACXT,QAASW,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJA,E,2CAQb,SAAQC,GACN,IAAGf,EAAYgB,KAAKN,MAAMT,WAAYe,KAAKN,MAAMT,QAAQc,GAAzD,CAGA,IAAMd,EAAUe,KAAKN,MAAMT,QAAQgB,QACnChB,EAAQc,GAASC,KAAKN,MAAMI,QAAS,IAAM,IAC3CE,KAAKE,SAAS,CACZjB,QAASA,EACTa,SAAWE,KAAKN,MAAMI,a,oBAU1B,WACE,IACIK,EADEC,EAASpB,EAAYgB,KAAKN,MAAMT,SAOtC,OAJEkB,EADEC,EACO,WAAaA,EAEb,iBAAmBJ,KAAKN,MAAMI,QAAU,IAAM,KAGvD,gCACE,qBAAKhB,UAAU,SAAf,SAAyBqB,IACzB,sBAAKrB,UAAU,MAAf,UACGkB,KAAKP,aAAa,GAClBO,KAAKP,aAAa,GAClBO,KAAKP,aAAa,MAErB,sBAAKX,UAAU,MAAf,UACGkB,KAAKP,aAAa,GAClBO,KAAKP,aAAa,GAClBO,KAAKP,aAAa,MAErB,sBAAKX,UAAU,MAAf,UACGkB,KAAKP,aAAa,GAClBO,KAAKP,aAAa,GAClBO,KAAKP,aAAa,a,GApDTY,IAAMC,WCE1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzC,M","file":"static/js/main.f305ffa5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./square.css\";\r\n\r\nconst Square = (props) => (\r\n  <button\r\n    onClick={props.onClick}\r\n    className=\"square\">\r\n    {props.value}\r\n  </button>\r\n)\r\n\r\nexport default Square\r\n","import React from 'react';\r\nimport Square from './Square.js';\r\n\r\nimport \"./board.css\"\r\n\r\nclass Board extends React.Component{\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      isXNext: true\r\n    }\r\n  }\r\n\r\n  handler(index){\r\n    if(checkWinner(this.state.squares) || this.state.squares[index]){\r\n      return ;\r\n    }\r\n    const squares = this.state.squares.slice();\r\n    squares[index] = this.state.isXNext? \"X\" : \"O\";\r\n    this.setState({\r\n      squares: squares,\r\n      isXNext: !(this.state.isXNext)\r\n    })\r\n  }\r\n\r\n  createSquare = (i) => \r\n    <Square\r\n      value={this.state.squares[i]}\r\n      onClick={() => this.handler(i)} \r\n    />\r\n\r\n  render(){\r\n    const winner = checkWinner(this.state.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next Player: ' + (this.state.isXNext ? 'X' : 'O');\r\n    }\r\n    return(\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"row\">\r\n          {this.createSquare(0)}\r\n          {this.createSquare(1)}\r\n          {this.createSquare(2)}\r\n        </div>\r\n        <div className=\"row\">\r\n          {this.createSquare(3)}\r\n          {this.createSquare(4)}\r\n          {this.createSquare(5)}\r\n        </div>\r\n        <div className=\"row\">\r\n          {this.createSquare(6)}\r\n          {this.createSquare(7)}\r\n          {this.createSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction checkWinner(squares){\r\n  \r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for(let i=0; i < lines.length; i++ ){\r\n    const [a, b, c] = lines[i];\r\n      if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n        return squares[a];\r\n      }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Board;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Board from './Board.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Board/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}